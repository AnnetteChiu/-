{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/annettelianchiu/random-forest?scriptVersionId=229956357\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"72e1d600","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-03-27T07:23:45.833187Z","iopub.status.busy":"2025-03-27T07:23:45.832702Z","iopub.status.idle":"2025-03-27T07:23:46.809076Z","shell.execute_reply":"2025-03-27T07:23:46.808021Z"},"papermill":{"duration":0.982866,"end_time":"2025-03-27T07:23:46.811155","exception":false,"start_time":"2025-03-27T07:23:45.828289","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/randomforest/train.csv\n","/kaggle/input/randomforest/test.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"code","execution_count":2,"id":"478021ef","metadata":{"execution":{"iopub.execute_input":"2025-03-27T07:23:46.818178Z","iopub.status.busy":"2025-03-27T07:23:46.817652Z","iopub.status.idle":"2025-03-27T07:23:46.867976Z","shell.execute_reply":"2025-03-27T07:23:46.866872Z"},"papermill":{"duration":0.055313,"end_time":"2025-03-27T07:23:46.869649","exception":false,"start_time":"2025-03-27T07:23:46.814336","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Sex_female</th>\n","      <th>Sex_male</th>\n","      <th>Embarked_C</th>\n","      <th>Embarked_Q</th>\n","      <th>Embarked_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>595</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>24.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>33.0000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>596</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>49.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>597</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>24.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2250</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>598</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>49.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>56.9292</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>599</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>24.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>27.0000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>600 rows Ã— 11 columns</p>\n","</div>"],"text/plain":["     Survived  Pclass   Age  SibSp  Parch     Fare  Sex_female  Sex_male  \\\n","0           0       3  22.0      1      0   7.2500           0         1   \n","1           1       1  38.0      1      0  71.2833           1         0   \n","2           1       3  26.0      0      0   7.9250           1         0   \n","3           1       1  35.0      1      0  53.1000           1         0   \n","4           0       3  35.0      0      0   8.0500           0         1   \n","..        ...     ...   ...    ...    ...      ...         ...       ...   \n","595         1       2  24.0      0      0  33.0000           1         0   \n","596         0       3  49.0      0      0   0.0000           0         1   \n","597         0       3  24.0      0      0   7.2250           0         1   \n","598         1       1  49.0      1      0  56.9292           0         1   \n","599         1       2  24.0      2      1  27.0000           1         0   \n","\n","     Embarked_C  Embarked_Q  Embarked_S  \n","0             0           0           1  \n","1             1           0           0  \n","2             0           0           1  \n","3             0           0           1  \n","4             0           0           1  \n","..          ...         ...         ...  \n","595           0           0           1  \n","596           0           0           1  \n","597           1           0           0  \n","598           1           0           0  \n","599           0           0           1  \n","\n","[600 rows x 11 columns]"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["import pandas as pd\n","train = pd.read_csv(\"/kaggle/input/randomforest/train.csv\")\n","train"]},{"cell_type":"code","execution_count":3,"id":"eda2b841","metadata":{"execution":{"iopub.execute_input":"2025-03-27T07:23:46.876719Z","iopub.status.busy":"2025-03-27T07:23:46.876432Z","iopub.status.idle":"2025-03-27T07:23:46.897032Z","shell.execute_reply":"2025-03-27T07:23:46.896062Z"},"papermill":{"duration":0.025813,"end_time":"2025-03-27T07:23:46.898556","exception":false,"start_time":"2025-03-27T07:23:46.872743","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Sex_female</th>\n","      <th>Sex_male</th>\n","      <th>Embarked_C</th>\n","      <th>Embarked_Q</th>\n","      <th>Embarked_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>24.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.8958</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>24.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>42.4000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>44.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>26.5500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>36.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>15.5500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>284</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13.0000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>285</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>286</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>24.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>23.4500</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>287</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>288</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>289 rows Ã— 11 columns</p>\n","</div>"],"text/plain":["     Survived  Pclass   Age  SibSp  Parch     Fare  Sex_female  Sex_male  \\\n","0           0       3  24.0      0      0   7.8958           0         1   \n","1           0       1  24.0      0      0  42.4000           0         1   \n","2           0       3  44.0      0      0   8.0500           0         1   \n","3           1       1  35.0      0      0  26.5500           0         1   \n","4           0       3  36.0      1      0  15.5500           0         1   \n","..        ...     ...   ...    ...    ...      ...         ...       ...   \n","284         0       2  27.0      0      0  13.0000           0         1   \n","285         1       1  19.0      0      0  30.0000           1         0   \n","286         0       3  24.0      1      2  23.4500           1         0   \n","287         1       1  26.0      0      0  30.0000           0         1   \n","288         0       3  32.0      0      0   7.7500           0         1   \n","\n","     Embarked_C  Embarked_Q  Embarked_S  \n","0             0           0           1  \n","1             0           0           1  \n","2             0           0           1  \n","3             1           0           0  \n","4             0           0           1  \n","..          ...         ...         ...  \n","284           0           0           1  \n","285           0           0           1  \n","286           0           0           1  \n","287           1           0           0  \n","288           0           1           0  \n","\n","[289 rows x 11 columns]"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["import pandas as pd\n","test = pd.read_csv(\"/kaggle/input/randomforest/test.csv\")\n","test"]},{"cell_type":"code","execution_count":4,"id":"853a4670","metadata":{"execution":{"iopub.execute_input":"2025-03-27T07:23:46.906052Z","iopub.status.busy":"2025-03-27T07:23:46.905774Z","iopub.status.idle":"2025-03-27T07:23:46.918324Z","shell.execute_reply":"2025-03-27T07:23:46.917503Z"},"papermill":{"duration":0.017574,"end_time":"2025-03-27T07:23:46.919613","exception":false,"start_time":"2025-03-27T07:23:46.902039","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Sex_female</th>\n","      <th>Sex_male</th>\n","      <th>Embarked_C</th>\n","      <th>Embarked_Q</th>\n","      <th>Embarked_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>71.2833</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Survived  Pclass   Age  SibSp  Parch     Fare  Sex_female  Sex_male  \\\n","0         0       3  22.0      1      0   7.2500           0         1   \n","1         1       1  38.0      1      0  71.2833           1         0   \n","2         1       3  26.0      0      0   7.9250           1         0   \n","3         1       1  35.0      1      0  53.1000           1         0   \n","4         0       3  35.0      0      0   8.0500           0         1   \n","\n","   Embarked_C  Embarked_Q  Embarked_S  \n","0           0           0           1  \n","1           1           0           0  \n","2           0           0           1  \n","3           0           0           1  \n","4           0           0           1  "]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["data = pd.concat( [train, test], ignore_index=True)\n","data.head(5)"]},{"cell_type":"code","execution_count":5,"id":"adf61a19","metadata":{"execution":{"iopub.execute_input":"2025-03-27T07:23:46.927425Z","iopub.status.busy":"2025-03-27T07:23:46.927089Z","iopub.status.idle":"2025-03-27T07:23:48.793688Z","shell.execute_reply":"2025-03-27T07:23:48.79283Z"},"papermill":{"duration":1.87247,"end_time":"2025-03-27T07:23:48.795562","exception":false,"start_time":"2025-03-27T07:23:46.923092","status":"completed"},"tags":[]},"outputs":[],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","execution_count":6,"id":"03a0b62a","metadata":{"execution":{"iopub.execute_input":"2025-03-27T07:23:48.804585Z","iopub.status.busy":"2025-03-27T07:23:48.804062Z","iopub.status.idle":"2025-03-27T07:23:49.467572Z","shell.execute_reply":"2025-03-27T07:23:49.466519Z"},"papermill":{"duration":0.669716,"end_time":"2025-03-27T07:23:49.469283","exception":false,"start_time":"2025-03-27T07:23:48.799567","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:848: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  func(*plot_args, **plot_kwargs)\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:848: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  func(*plot_args, **plot_kwargs)\n"]},{"data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x78c885629330>"]},"execution_count":6,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAk0AAAEiCAYAAADksOZKAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAgdElEQVR4nO3dfVSUdf7/8ReIDBgCoglSYFomWmoiSZjuVlJ4s5obtWlUWq6WK6lZma6rrWcz3dputtai9qdRraZ2o5mntfXgXbaIyirmTXjHHm0DLBEQS0T5/P7Y03ybVfMDzjDD8Hycc53jXNfnuub9UXj7mmuuaybAGGMEAACAnxTo7QIAAAAaA0ITAACABUITAACABUITAACABUITAACABUITAACABUITAACABUITAACABUITAACABUITfMK6desUEBCg8vJyjz7PqFGjNGzYMI8+BwDvop/AUwhNcPrmm280btw4xcfHy+FwKCYmRmlpafr88889/tx9+vRRcXGxIiIiPP5cnrZjxw7169dPISEhiouL07PPPuvtkoAGRz+5eCdPntSoUaPUrVs3BQUFEdB8QJC3C4DvSE9P16lTp/TWW2+pY8eOKi0tVU5Ojo4ePVrvYxpjdObMGQUF/fSPWnBwsGJiYur9PL6isrJSt912m1JTU5WVlaUvvvhCDz74oCIjIzV27Fhvlwc0GPrJxTtz5oxCQ0M1YcIEffDBB94uB5JkAGPMsWPHjCSzbt26844pKioyksy2bdvO2m/t2rXGGGPWrl1rJJlPPvnEJCYmmubNm5vXX3/dSDJ79uxxOd4LL7xgOnbs6LLfsWPHTEVFhQkJCTGffPKJy/gPP/zQhIWFmRMnThhjjDl06JC56667TEREhGnVqpUZOnSoKSoqco4/ffq0efTRR01ERISJiooyTzzxhLn//vvN7bffXv+/qAt49dVXTatWrUx1dbVz3ZNPPmk6d+7ssecEfA39xP1GjhzZYM+F8+PtOUiSwsLCFBYWpuXLl6u6uvqijzd16lTNnTtXe/bs0Z133qmkpCQtXLjQZczChQt1zz33nLVveHi4fvGLX2jRokVnjR82bJhatGihmpoapaWlqWXLlvrss8/0+eefKywsTAMGDNCpU6ckSc8//7yys7O1YMECbdy4UWVlZVq2bNlP1n3o0CHn38X5lmeeeea8++fm5upn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aGi9jjlnzhzNmjXLXSUCaOLoKQDqw+MfORAZGamrr75a+/fvV0xMjE6dOqXy8nKXMaWlpee8BuoH06ZNU0VFhXM5fPiwh6sG4M/oKQDqwyMXgv9YVVWVDhw4oPvuu0+9evVS8+bNlZOTo/T0dElSYWGhDh06pJSUlPMew+FwyOFweLrURmdR3iFvlwA0SvQUAPXh9tD0+OOPa8iQIWrfvr2+/vprPfXUU2rWrJlGjBihiIgIjR49WpMnT1ZUVJTCw8P1yCOPKCUlhTvnfNiFwtk9yfENVAkAAN7j9tD01VdfacSIETp69KguvfRS9e3bV5s2bdKll14qSXrxxRcVGBio9PR0VVdXKy0tTa+++qq7ywAAAHArt4emxYsX/+T2kJAQzZs3T/PmzXP3UwMAAHgM3z0HAABggdAEAABggdAEAABggdAEAABggdAEAABggdAEAABggdAEAABggdAEAABggdAEAABgweNf2Avfxpf+AgBghzNNAAAAFjjT5KM4AwTA33m6z92THO/R46Pp4UwTAACABUITAACABUITAACABUITAACABUITAACABe6ew0WzuQOGu1iApoE7f+HPONMEAABggdAEAABggbfn0CAudMqet+8AAL6O0AQA9VCXa3d86UUB1xwB9cfbcwAAABYITQAAABYITQAAABYITQAAABYITQAAABa4ew6NBp88DgDwJs40AQAAWOBME5oUzlYBAOqLM00AAAAWCE0AAAAWCE0AAAAWuKYJfoXv1QIAeAqhCQDglxrrlyrDdxGaAKCR4wwr0DAITQAAeFhdgy1nvnwTF4IDAABYIDQBAABY4O05+ASuyQDgTfQg2OBMEwAAgIUmdabJXd87dqHjcAFf48a/LwDgXJpUaAIaCsELP8adU4B/IDQBdcS1DwDQNBGaAB/lrreTATQ+fJq5b+JCcAAAAAucaQK8gLf4AKDxITR5AP8hoqG444JzLloHGjduNGg4XgtN8+bN03PPPaeSkhL16NFDr7zyinr37u2tcpwIPAC8jT4E+CavhKYlS5Zo8uTJysrKUnJysl566SWlpaWpsLBQbdu29UZJAAA0CZyZqj+vXAj+wgsvaMyYMXrggQfUtWtXZWVlqUWLFlqwYIE3ygEAALigBg9Np06dUn5+vlJTU/+viMBApaamKjc3t6HLAQAAsNLgb899++23OnPm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w2Gys7PN7t27zdixY01kZKQpKSnxdmkXZdy4cSYiIsKsW7fOFBcXO5fvvvvOOebhhx828fHxZs2aNWbr1q0mJSXFpKSkeLFq9/jxnS7G+M88N2/ebIKCgszs2bPNvn37zMKFC02LFi3M3/72N+eYuXPnmsjISPPRRx+ZHTt2mNtvv71R3h48cuRIc9lllzlvD/7www9NmzZtzJQpU5xjfHWu/thTmnI/MYae4ou/Z3XV0D3Fb0OTMca88sorJj4+3gQHB5vevXubTZs2ebukiybpnMubb77pHPP999+b3/zmN6ZVq1amRYsW5pe//KUpLi72XtFu8r8Nzp/m+fHHH5trr73WOBwOk5CQYN544w2X7bW1tWbGjBkmOjraOBwO079/f1NYWOilauuvsrLSTJw40cTHx5uQkBDTsWNHM336dFNdXe0c48tz9bee0pT7iTH0FF/9PauLhu4pAcb86GMzAQAAcE5+eU0TAACAuxGaAAAALBCaAAAALBCaAAAALBCaAAAALBCaAAAALBCaAAAALBCaAAAALBCaAAAALBCa4FNyc3PVrFkzDR482NulAPAD9BS4E1+jAp/y61//WmFhYZo/f74KCwsVGxvr7ZIANGL0FLgTZ5rgM6qqqrRkyRKNGzdOgwcPVnZ2tsv2FStWqFOnTgoJCdHNN9+st956SwEBASovL3eO2bhxo/r166fQ0FDFxcVpwoQJOnHiRMNOBIBPoKfA3QhN8BlLly5VQkKCOnfurHvvvVcLFizQDydCi4qKdOedd2rYsGEqKCjQQw89pOnTp7vsf+DAAQ0YMEDp6enasWOHlixZoo0bNyozM9Mb0wHgZfQUuJ0BfESfPn3MSy+9ZIwxpqamxrRp08asXbvWGGPMk08+aa699lqX8dOnTzeSzLFjx4wxxowePdqMHTvWZcxnn31mAgMDzffff+/x+gH4FnoK3I0zTfAJhYWF2rx5s0aMGCFJCgoK0t1336358+c7t19//fUu+/Tu3dvlcUFBgbKzsxUWFuZc0tLSVFtbq6KiooaZCACfQE+BJwR5uwBAkubPn6/Tp0+7XKRpjJHD4dBf/vIXq2NUVVXpoYce0oQJE87aFh8f77ZaAfg+ego8gdAErzt9+rTefvttPf/887rttttctg0bNkzvvvuuOnfurE8++cRl25YtW1weJyYmavfu3brqqqs8XjMA30VPgcd4+/1BYNmyZSY4ONiUl5eftW3KlCkmKSnJHDx40DRv3txMmTLFFBYWmiVLlpjLL7/cSHLuV1BQYEJDQ8348ePNtm3bzN69e83y5cvN+PHjG3pKALyIngJP4ZomeN38+fOVmpqqiIiIs7alp6dr69atOn78uN5//319+OGH6t69u1577TXnnS4Oh0OS1L17d61fv1579+5Vv3791LNnT82cOZPPZQGaGHoKPIUPt0SjNXv2bGVlZenw4cPeLgWAH6Cn4EK4pgmNxquvvqrrr79erVu31ueff67nnnuOz0sBUG/0FNQVoQmNxr59+/T000+rrKxM8fHxeuyxxzRt2jRvlwWgkaKnoK54ew4AAMACF4IDAABYIDQBAABYIDQBAABYIDQBAABYIDQBAABYIDQBAABYIDQBAABYIDQBAABYIDQBAABY+P9LIS+ccJC34gAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 600x300 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["g = sns.FacetGrid(data, col='Survived')\n","g.map(sns.distplot, 'Age', kde=False)"]},{"cell_type":"code","execution_count":7,"id":"9b2fbf87","metadata":{"execution":{"iopub.execute_input":"2025-03-27T07:23:49.47897Z","iopub.status.busy":"2025-03-27T07:23:49.47863Z","iopub.status.idle":"2025-03-27T07:23:50.19195Z","shell.execute_reply":"2025-03-27T07:23:50.190968Z"},"papermill":{"duration":0.720328,"end_time":"2025-03-27T07:23:50.193907","exception":false,"start_time":"2025-03-27T07:23:49.473579","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.tree import BaseDecisionTree"]},{"cell_type":"code","execution_count":8,"id":"a80140b6","metadata":{"execution":{"iopub.execute_input":"2025-03-27T07:23:50.203564Z","iopub.status.busy":"2025-03-27T07:23:50.203065Z","iopub.status.idle":"2025-03-27T07:23:50.347512Z","shell.execute_reply":"2025-03-27T07:23:50.346149Z"},"papermill":{"duration":0.151911,"end_time":"2025-03-27T07:23:50.349951","exception":false,"start_time":"2025-03-27T07:23:50.19804","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn import preprocessing \n","from sklearn.model_selection import GridSearchCV \n","from sklearn.ensemble import RandomForestClassifier \n","from sklearn.ensemble import RandomForestRegressor"]},{"cell_type":"code","execution_count":9,"id":"242fd9cf","metadata":{"execution":{"iopub.execute_input":"2025-03-27T07:23:50.361481Z","iopub.status.busy":"2025-03-27T07:23:50.361065Z","iopub.status.idle":"2025-03-27T07:23:53.647983Z","shell.execute_reply":"2025-03-27T07:23:53.646955Z"},"papermill":{"duration":3.293601,"end_time":"2025-03-27T07:23:53.649612","exception":false,"start_time":"2025-03-27T07:23:50.356011","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["0.8317\n"]}],"source":["rf = RandomForestClassifier(criterion='gini', \n","                             n_estimators=1000,\n","                             min_samples_split=12,\n","                             min_samples_leaf=1,\n","                             oob_score=True,\n","                             random_state=1,\n","                             n_jobs=-1) \n","\n","rf.fit(train.iloc[:, 1:], train.iloc[:, 0])\n","print(\"%.4f\" % rf.oob_score_)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":6979381,"sourceId":11181596,"sourceType":"datasetVersion"}],"dockerImageVersionId":30918,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":11.347848,"end_time":"2025-03-27T07:23:54.374865","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-03-27T07:23:43.027017","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}